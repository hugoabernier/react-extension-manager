{
  "$schema": "https://dev.office.com/json-schemas/core-build/tslint.schema.json",
  // Display errors as warnings
  "displayAsWarning": true,
  // The TSLint task may have been configured with several custom lint rules
  // before this config file is read (for example lint rules from the tslint-microsoft-contrib
  // project). If true, this flag will deactivate any of these rules.
  "removeExistingRules": true,
  // When true, the TSLint task is configured with some default TSLint "rules.":
  "useDefaultConfigAsBase": false,
  // Since removeExistingRules=true and useDefaultConfigAsBase=false, there will be no lint rules
  // which are active, other than the list of rules below.
  "lintConfig": {
    // Opt-in to Lint rules which help to eliminate bugs in JavaScript
    "rules": {
      "arrow-return-shorthand": true,
      "jsx-ban-props": [
        true,
        [
          "style",
          "Use className and provide css rules instead of using inline styles."
        ]
      ],
  
      "function-name": [
        true,
        {
          "method-regex": "^[a-z][\\w\\d]+$",
          "private-method-regex": "^_[a-z][\\w\\d]+$",
          "protected-method-regex": "^[_]?[a-z][\\w\\d]+$",
          "static-method-regex": "^[a-z][\\w\\d]+$",
          "function-regex": "^[_]?[a-z][\\w\\d]+$"
        }
      ],
      "class-name": true,
      "comment-format": [
        true,
        "check-space"
      ],
      "export-name": false,
      "forin": false,
      "label-position": false,
      "member-access": true,
      "member-ordering": [
        true,
        {
          "order": [
            "public-static-field",
            "protected-static-field",
            "private-static-field",
            "public-instance-field",
            "protected-instance-field",
            "private-instance-field",
            "public-static-method",
            "protected-static-method",
            "private-static-method",
            "public-constructor",
            "public-instance-method",
            "protected-constructor",
            "protected-instance-method",
            "private-constructor",
            "private-instance-method"
          ]
        }
      ],
      "no-arg": false,
      "no-consecutive-blank-lines": true,
      "no-console": false,
      "no-construct": false,
      "no-duplicate-case": true,
      "no-duplicate-variable": true,
      "no-eval": false,
      "no-function-expression": true,
      "no-internal-module": true,
      "no-irregular-whitespace": true,
      "no-null-keyword": true,
      "no-var-keyword": true,
      "no-shadowed-variable": true,
      "no-switch-case-fall-through": true,
      "no-unnecessary-semicolons": true,
      "no-unused-expression": true,
      "no-use-before-declare": true,
      "no-with-statement": true,
      "prefer-const": true,
      "ordered-imports": true,
      "semicolon": true,
      "trailing-comma": false,
      // "typedef": false,
      "typedef": [
        true,
        "call-signature",
        "parameter",
        "arrow-parameter",
        "property-declaration"
      ],
      "typedef-whitespace": false,
      "use-named-parameter": true,
      "valid-typeof": true,
      "variable-name": [true, "ban-keywords", "check-format", "allow-leading-underscore"],
      "whitespace": false
    }
  }
}